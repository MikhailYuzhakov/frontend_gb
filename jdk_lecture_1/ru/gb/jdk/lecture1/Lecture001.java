package ru.gb.jdk.lecture1;

import ru.gb.jdk.lecture1.tictactoe.GameWindow;

public class Lecture001 {
    public static void main(String[] args) {
        /*
        Окно наделено некоторыми свойствами, которые возможно изменить во время работы приложения.
        Большая часть свойств окна задается в конструкторе и не меняется.
        В Swing при нажатии на крестик в углу программа не завершается.
        По-умолчанию все окна - невидлимые.

        Окно – это всегда отдельный поток программы, внутри которого работает бесконечный цикл.
        В объекте окна существует очередь сообщений, которую цикл опрашивает и выполняет.
        При создании нового окна - создастся новый поток.

        Перекрытие происходит из-за использования компоновщика, или, как их ещё называют,
        менеджера размещений. Для этого используется мененджер размещений.
        Компоновщик – это специальный объект, который помещается на некоторые (RootPaneContainer2)
        компоненты и осуществляет автоматическую расстановку добавляемых в него компонентов,
        согласно правилам.
        Существующие в swing компановщики:
        — BorderLayout (по умолчанию);
        — BoxLayout;
        — CardLayout;
        — FlowLayout;
        — GridBagLayout;
        — GridLayout;
        — GroupLayout;
        — SpringLayout.
        Главная особенность панелей в том, что внутри каждой панели возможно использовать свой
        собственный компоновщик. JPanel – это по умолчанию невидимый прямоугольник, на котором
        может находиться собственный компоновщик.
        JPanel позволяет также осуществлять рисование и взаимодействие с пользователем.
        Основные графические интерактивности в демонстрационном приложении будут сделаны именно
        на панели.
        Для рисования самой панели фреймворком определён метод paintComponent(). Этот метод
        вызывается фреймворком когда что-то происходит, например, когда основное окно перекрывается
        другим, перемещается на другой экран, или если его развернуть из свёрнутого состояния,
        вызывается он гораздо реже, чем это необходимо для логики игры. Для описания игрового
        процесса необходимо перерисовывать компонент по каждому клику мышкой и по каждому действию
        оппонента.
        Важно помнить, что метод paintComponent() не следует напрямую вызывать из кода. Этот метод
        должен вызываться только фреймворком. Для того чтобы запросить у фреймворка вызов этого
        метода тоже есть специальный метод.
         */
        new GameWindow();
        System.out.println("Main is over");
    }
}