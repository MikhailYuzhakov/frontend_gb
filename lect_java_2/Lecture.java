public class Lecture {
    public Lecture(){
        super();
    }
    /*
    Специализация: данные и функции
    Языки программирования = типизированные и нетипизированные
    Нетипизированные - старые и низкоуровенвые языки (Ассемблер), все данные это цепочки бит произвольный длины. Они
    работают быстрее.
    Java - язык со строгой явной статической типизацией. Объявили переменную и она таковой останется и необходимо
    явно указать тип. Но в версии старше Java 9 есть возможность указать var и Java попробует сама определить.
    Начальное значени для целочисленных переменных это 0.
    Всего 8 примитивных типов данных: byte, short, char, int, long, float, int, double, boolean.
    Все числа с плавающей запятой в коде это double, а целые - int.
    Чтобы присволить в long l1 = 5_000_000_000L или float f1 = 0.123f

    Формат хранения в памяти числа с плавающей запятой:
        31(63) бит - знак
        30-23(62-52) бит - дробная часть числа (мантисса)
        0-22(0-51) бит - целая часть числа (экспонента)
    boolean занимает 1 байт в JVM
    char интерпретирует число как символ по таблице utf-8, записывается в ' '

    Преобразование примитивных типов (typeCasting):
    неявное - при присвоении начального значенния byte b = 100;
    явное - long l = 5_000_000_000L или byte b0 = (byte) i0;
    Константы можно объявить с помощью final - переменная с конечным типом.

    Ссылочные типы данных:
    По идентификатору ссылочного типа хранится ссылка на ячейки в памяти, где хранятся данные.
    Начальное значение ссылочных типов данных это null.
        1. Массив (выведен на уровень языка и его не нужно называть)
         индекс это показатель смешения адреса в памяти относительно адреса первого элемента в памяти
         переменная хранит адрес первого элемента массива.
         преобразовать массив целиком напрямую невозможно, но преобразовать по элементно возможно
         если пишем final int[] то по элементам можно назначаить
         размерности нижних уровне указывать не обязатально int[][] arr = int[3][]
         int[] a = {1, 2, 3}
         int[] a = int [3]

     Бинарные операторы:
        & | ~ ^ << >>
     Функция - это исполняемые блок кода на языке Java - их в ЯП не существует.
     Метод - функция в классе - в Java всё только так и устроено.
     Имя методов в стиле lowerCamelCase.
     передача аргументов в функцию производится копированием.
     Сигнатура метода - это имя методоа и его параметры. В сигнатуру метода не входит возращаемое значение.
     Нельзя написать два метода с одиноковой сигнатурой (перегрузка разрешена).
     */
    public void exp1() {
        System.out.println("exmp1");
    }
}
